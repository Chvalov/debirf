.TH DEBIRF "1" "March 2007" "debirf 0.1" "User Commands"
.SH NAME
debirf \- build an initrd to boot a full Debian system entirely from RAM
.SH SYNOPSIS
.B debirf <subcommand> [options] [args]
.SH DESCRIPTION
.PP
\fBdebirf\fP (DEBian on Initial Ram Filesystem) is a set of tools
designed to create and prepare a kernel and initial ram filesystem
that can run a full-blown Debian environment entirely from RAM.
.PP
\fBdebirf\fP has various subcommands (see \fBSUBCOMMANDS\fP) which act
on a specified debirf profile (see \fBPROFILES\fP).
.PP
The debirf system is outlined at:
.PP
   http://cmrg.fifthhorseman.net/wiki/debirf
.PD
.SH SUBCOMMANDS
\fBdebirf\fP takes various subcommands:
.PD
.TP
.B make [options] PROFILE
Create a debirf system based on profile PROFILE.  This will create the
root for the profile, run all modules on the root, and then generate
the kernel image (see \fBKERNEL\fP) and debirf initramfs.  This
subcommand takes various options (see \fBOPTIONS\fP).
.TP
.B enter PROFILE
Chroot into root of profile PROFILE, with full profile environment.
.TP
.B makeiso PROFILE
Create a bootable CD-ROM image from the kernel and initramfs in
PROFILE.  This requires a copy of the GRUB El Torito bootloader to be
available (it is pulled from the debian package's default location,
but can an absolute path to the image can be supplied with the
GRUB_ELTORITO environment variable).  "mkisofs" must be present in the
user's path.
.TP
.B help
Output a brief usage summary.
.PD
.SH OPTIONS (for make subcommand only)
.PP
.TP
\fB\-c\fR, \fB\-\-check-vars\fR
check variables before make
.TP
\fB\-n\fR, \fB\-\-new\fR
create new root, even if old one exists
.TP
\fB\-o\fR, \fB\-\-overwrite\fR
debootstrap on top of old root if it exists
.TP
\fB\-s\fR, \fB\-\-skip\fR
skip debootstrap step altogether if old root exists
.TP
\fB\-r\fR, \fB\-\-root-build\fR
use real chroot to build instead of fakechroot (requires superuser
privileges or CAP_SYS_CHROOT)
.TP
\fB\-w\fR, \fB\-\-no-warning\fR
skip superuser warning
.TP
\fB\-g\fR, \fB\-\-gpg-keyring=KEYRING\fR
Verify the debootstrap stage against the GPG keyring in the file
KEYRING.  By default, the keyring used is
/usr/share/keyrings/debian-archive-keyring.gpg.  If you want to skip
verification entirely (not recommended!), you should use
--gpg-keyring=noverify.
.TP
\fB\-i\fR, \fB\-\-initrd-only\fR
remake initramfs from existing root (skip debootstrap and module
stages)
.TP
\fB\-k\fR, \fB\-\-kernel-deb=KERNEL\fR
install KERNEL .deb, instead of default kernel
.PD
.SH PROFILES
.PP
A debirf profile is a directory containing a debirf.conf config file
and a modules sub-directory (see \fBMODULES\fP).
.PD
.SH MODULES
.PP
\fBModules\fP are used to configure the debirf system, and can be used
to extend the capabilities of debirf.  Modules are bash shell scripts
that are executed in alpha-numeric order by \fBrun-parts\fP in a
chroot in the debirf root during the module stage of the debirf build.
The module stage is right after the debirf debootstrap stage, and
right before the initramfs archive is created.  All of the shell
variables defined in the \fIdebirf.conf\fP file are available to the
modules.
.PP
\fBNOTE:\fP Some modules are more important to the proper functioning
of debirf than others, and the ordering of modules is important.  Some
modules may depend on certain other modules having already been, or
not yet been, run.  For instance, the module that cleans the debirf
apt cache ("z1_clean_root") should be the last module run at the end
of the module stage.
.PD
.SH KERNEL
.PP
The \fBdebirf\fP "install-kernel" module will try to pick the most
up-to-date kernel for the suite you are installing (versions 2.6
only), with the arch determined by the kernel running on the host
build system.
.PP
.SH FUNCTIONS
.PP
A set of pre-defined bash shell functions are available to the modules to
fasciliate configuring the debirf system:
.PD 1
.TP
.B debirf_exec <command>
Execute <command> within debirf root (\fBDEBIRF_ROOT\fP) with chroot.
.TP
.B msg <message>
Output a message to standard out during the build process.
.TP
.B failure <message> <exit-code>
Cause debirf script to fail with <exit-code>, and <message> to stderr.
.TP
.B debirf_info_sh <message>
Write one line of sh code to the \fIdebirf.info\fP file on the debirf root.
.TP
.B debirf_info_comment <message>
Write one line of comment to the \fIdebirf.info\fP file on the debirf root.
.RE
.PD
.SH ENVIRONMENT
.PP
The following environment variables are used by debirf:
.PD 1
.TP
.B DEBIRF_LABEL
debirf label (default: debirf)
.TP
.B DEBIRF_BUILDD
where to build the debirf (default: ./)
.TP
.B DEBIRF_MIRROR
Debian mirror (default: http://mirrors.kernel.org/debian)
.TP
.B DEBIRF_DISTRO
debirf build distribution (default: lenny)
.TP
.B GRUB_ELTORITO
absolute path to grub's stage2_eltorito image when using \fBdebirf
makeiso\fR (default: standard location from debian grub package -- you
probably don't need to specify this)
.PD
.SH FILES
.PD 1
.TP
debirf.conf
Debirf profile configuration file.  Usually contains values for the
various debirf environment variables (see \fBENVIRONMENT\fP).
.TP
$DEBIRF_ROOT/etc/debirf/debirf.info
File that stores various information about the debirf build.  This is a
bash-sourceable file.
.PD
.SH AUTHOR
Written by Jameson Rollins and Daniel Kahn Gillmor.
.SH "REPORTING BUGS"
Report bugs to <debirf@fifthhorseman.net>.
.SH COPYRIGHT
Copyright \(co 2007 Jameson Rollins and Daniel Kahn Gillmor
.br
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
.BR debootstrap (8),
.BR fakechroot (1)
