#!/bin/bash

# make-debirf: script to build debirf system (must be root).
#
# The debirf scripts were written by
# Jameson Rollins <jrollins@fifthhorseman.net>
# and
# Daniel Kahn Gillmor <dkg-debian.org@fifthhorseman.net>.
#
# They are Copyright 2007, and are all released under the GPL, version 2
# or later.

###############################################################
### VARIABLES

CMD=$(basename $0)

DEBIRF_CONF=${DEBIRF_CONF:-"/etc/debirf/debirf.conf"}
[ -f "$DEBIRF_CONF" ] && source "$DEBIRF_CONF"

### defaults
# debirf label
DEBIRF_LABEL=${DEBIRF_LABEL:-"debirf"}
# where to build the debirf
DEBIRF_PATH=${DEBIRF_PATH:-"/var/lib/debirf"}
# the debirf root, used by plugins
DEBIRF_ROOT=${DEBIRF_ROOT:-"$DEBIRF_PATH/root"}
# the plugins directory
DEBIRF_PLUGINS=${DEBIRF_PLUGINS:-"/usr/share/debirf/plugins"}
# debirf boot method
DEBIRF_METHOD=${DEBIRF_METHOD:-"stupid_simple"}
# Debian mirror
DEBIRF_MIRROR=${DEBIRF_MIRROR:-"http://mirrors.kernel.org/debian"}
# what distribution should debirf be built from?
DEBIRF_DISTRO=${DEBIRF_DISTRO:-"etch"}

DEBIRF_COMMON="/usr/share/debirf/common"

DEBIRF_INFO_TARGET="${DEBIRF_ROOT}/etc/debirf/debirf.info"

# set locale default
export LC_CTYPE="C"
export LANGUAGE="C"
export LANG="C"

###############################################################
### FUNCTIONS

usage() {
cat <<EOF
Usage: $CMD kernel-image.deb

Create a debirf initramfs.

'man make-debirf' for more information.
EOF
}

create_debootstrap() {
    # include initramfs-tools because they'll be handy
    # exclude aptitude
    mkdir -p "$DEBIRF_ROOT"
    /usr/sbin/debootstrap --exclude=aptitude --include=initramfs-tools "$DEBIRF_DISTRO" "$DEBIRF_ROOT" "$DEBIRF_MIRROR"
}

run_plugins() {
    # export all the DEBIRF_* environment variables:
    for var in ${!DEBIRF_*}; do
	export $var
    done
    run-parts --verbose "$DEBIRF_PLUGINS"
}

## create_initrd functions take the name of the targeted initrd as
## their first argument.
 
# stupid simple method
create_initrd_stupid_simple() {
    #ln sbin/init to /init
    ln -sf sbin/init "$DEBIRF_ROOT/init"
    
    # create root image
    msg "creating debirf initrd..."
    ( cd "$DEBIRF_ROOT" && find * | cpio -H newc --create  | gzip ) > "$1"
}

# tweak initrd method: untested, probably doesn't work right yet.  soon!
create_initrd_tweak_initrd() {
    cat "$DEBIRF_ROOT"/scripts/debirf <<EOF
mountroot() {
 rootmnt="/"
}
EOF
    cat > "$DEBIRF_ROOT"/bin/run-init <<EOF
#!/bin/sh
if [ "$1" != "/" ] ; then
  exec /usr/lib/klibc/bin/run-init "$@"
else
  MOUNT_POINT="$1"
  INIT="$2"
  shift 2
  exec "$INIT" "$@"
fi
EOF
    # create root image
    msg "creating debirf initrd..."
    cp initrd.img* "$1"
    (cd "$DEBIRF_ROOT" && find * | cpio -H newc --create  | gzip ) >> "$1"
}

###############################################################
### MAIN

trap EXIT

# check specified kernel package exists, and determine kernel name
DEBIRF_KERNEL_PACKAGE="$1"
if [ ! -f "$DEBIRF_KERNEL_PACKAGE" ] ; then
    echo "Specified kernel package $DEBIRF_KERNEL_PACKAGE not found."
    echo
    usage
    exit 1
fi

# check for common functions
[ -f "$DEBIRF_COMMON" ] || failure "debirf function file $DEBIRF_COMMON not found."
source "$DEBIRF_COMMON"

# check plugin directory exists
if [ ! -d "$DEBIRF_PLUGINS" ] ; then
    read -p "Plugin directory $DEBIRF_PLUGINS not found.  Continue? [y|N]: " -n 1 OK ; [ -z $OK ] || echo
    if [ "${OK/y/Y}" != 'Y' ] ; then
	failure "aborting."
    fi
fi

# create debootstrap root
if [ -d "$DEBIRF_ROOT" ] ; then
    read -p "Directory $DEBIRF_ROOT already exists.  write over? [y|N]: " -n 1 OK ; [ -z $OK ] || echo
    if [ "${OK/y/Y}" = 'Y' ] ; then
	msg "installing new root..."
	create_debootstrap
    fi
else
    msg "installing root..."
    create_debootstrap
fi

setup_debirf_info

# mount sys, proc
mount -t proc proc "$DEBIRF_ROOT/proc"
mount -t sysfs sys "$DEBIRF_ROOT/sys"

# update apt
debirf_exec apt-get update

# install plugins
msg "installing plugins..."
run_plugins

# umount sys,proc
umount "$DEBIRF_ROOT/proc"
umount "$DEBIRF_ROOT/sys"

# clear mtab
> "$DEBIRF_ROOT/etc/mtab"
# add proc to fstab
if ! awk '{ print $2 }' < "$DEBIRF_ROOT/etc/fstab" | grep -q '^/proc' ; then
    echo proc /proc proc defaults 0 0 >> "$DEBIRF_ROOT/etc/fstab"
fi

KERNAVAIL=$(ls -1 "$DEBIRF_ROOT/lib/modules" | head -n1)
DEBIRF_INITRD="${DEBIRF_LABEL}_${DEBIRF_DISTRO}_${KERNAVAIL}.cgz"
create_initrd_${DEBIRF_METHOD} "$DEBIRF_INITRD"

# final output
DEBIRF_KERNEL="vmlinu"*"$KERNAVAIL"
msg "debirf initrd created."
if [ "$DEBIRF_INITRD/$DEBIRF_KERNEL" ] ; then
    msg "kernel: $DEBIRF_PATH/"$DEBIRF_KERNEL
fi
msg "initrd: $DEBIRF_PATH/$DEBIRF_INITRD"
